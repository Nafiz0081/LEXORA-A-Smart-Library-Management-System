-- Global settings for rules
CREATE TABLE lexora_settings (
  setting_key    VARCHAR2(50)  PRIMARY KEY,
  setting_value  VARCHAR2(100) NOT NULL
);

-- Users (for CLI authentication)
CREATE TABLE app_users (
  user_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username       VARCHAR2(50)  NOT NULL UNIQUE,
  password_hash  VARCHAR2(200) NOT NULL,
  role_name      VARCHAR2(20)  NOT NULL, -- LIBRARIAN / MEMBER
  member_id      NUMBER,
  active         CHAR(1) DEFAULT 'Y' CHECK (active IN ('Y','N')),
  created_at     DATE DEFAULT SYSDATE
);

-- Members
CREATE TABLE members (
  member_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  full_name      VARCHAR2(120) NOT NULL,
  email          VARCHAR2(120) UNIQUE,
  phone          VARCHAR2(30),
  join_date      DATE DEFAULT SYSDATE,
  status         VARCHAR2(20) DEFAULT 'ACTIVE' CHECK (status IN ('ACTIVE','SUSPENDED','INACTIVE'))
);

-- Books
CREATE TABLE books (
  book_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  isbn             VARCHAR2(20) UNIQUE,
  title            VARCHAR2(300) NOT NULL,
  author           VARCHAR2(200),
  category         VARCHAR2(100),
  published_year   NUMBER(4),
  total_copies     NUMBER(6)    NOT NULL CHECK (total_copies >= 0),
  available_copies NUMBER(6)    NOT NULL CHECK (available_copies >= 0),
  status           VARCHAR2(20) DEFAULT 'AVAILABLE' CHECK (status IN ('AVAILABLE','UNAVAILABLE')),
  created_at       DATE DEFAULT SYSDATE
);

-- Borrow transactions
CREATE TABLE borrowings (
  borrow_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  member_id     NUMBER NOT NULL,
  book_id       NUMBER NOT NULL,
  issue_date    DATE DEFAULT TRUNC(SYSDATE) NOT NULL,
  due_date      DATE NOT NULL,
  return_date   DATE,
  fine_amount   NUMBER(10,2) DEFAULT 0,
  status        VARCHAR2(20) DEFAULT 'ISSUED' CHECK (status IN ('ISSUED','RETURNED','CANCELLED')),
  CONSTRAINT fk_bor_member FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE,
  CONSTRAINT fk_bor_book   FOREIGN KEY (book_id)   REFERENCES books(book_id)   ON DELETE CASCADE
);

-- Fine payments
CREATE TABLE fine_payments (
  payment_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  borrow_id     NUMBER NOT NULL,
  paid_amount   NUMBER(10,2) NOT NULL CHECK (paid_amount >= 0),
  paid_at       DATE DEFAULT SYSDATE,
  method        VARCHAR2(30),
  CONSTRAINT fk_fp_borrow FOREIGN KEY (borrow_id) REFERENCES borrowings(borrow_id) ON DELETE CASCADE
);

-- Indexes
CREATE INDEX idx_books_title ON books (title);
CREATE INDEX idx_books_author ON books (author);
CREATE INDEX idx_bor_member_status ON borrowings (member_id, status);
CREATE INDEX idx_bor_book_status   ON borrowings (book_id, status);

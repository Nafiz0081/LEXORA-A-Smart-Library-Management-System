 Lexora SQL Backend Explanation
0. Safety Cleanup
BEGIN EXECUTE IMMEDIATE 'DROP VIEW ...'; 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE ...';


Before creating new objects, we try to drop old versions.

Wrapped in BEGIN‚Ä¶EXCEPTION‚Ä¶END blocks so if the object doesn‚Äôt exist, Oracle won‚Äôt throw an error.

1. Core Tables
lexora_settings

Holds configurable system rules (borrow limits, fine per day, loan period).

Example rows:

('BORROW_LIMIT_PER_MEMBER', '3')
('LOAN_PERIOD_DAYS', '14')
('FINE_PER_DAY', '10')

app_users

(Optional) User accounts for authentication.

Fields: username, password_hash, role_name (LIBRARIAN / MEMBER).

Later used in CLI for login.

members

Library members (name, email, phone, status).

Status can be ACTIVE, SUSPENDED, INACTIVE.

books

Holds book inventory.

total_copies = how many physical copies in library.

available_copies = how many currently available (not loaned).

status = AVAILABLE or UNAVAILABLE (auto-updated via trigger).

borrowings

Records every borrow transaction.

Fields: issue_date, due_date, return_date, fine_amount, status (ISSUED, RETURNED, CANCELLED).

Links members and books via FKs.

fine_payments

Optional table to track fine payments.

Useful if fines can be paid in installments.

2. Default Settings
INSERT INTO lexora_settings(setting_key, setting_value) VALUES ('BORROW_LIMIT_PER_MEMBER', '3');


Seeds the system with rules:

Max 3 books per member.

Loan period = 14 days.

Fine = 10 (currency units) per day.

3. Indexes

For fast searching:

idx_books_title (book search by title)

idx_books_author (search by author)

idx_bor_member_status (member loans lookup)

4. Utility Functions

get_int_setting / get_num_setting
Fetches rule values from lexora_settings.

compute_due_date(issue_date)
Returns issue_date + loan_period_days.

compute_fine(due_date, return_date)
Calculates overdue fine = days late √ó fine_per_day.

üëâ These functions are reused in triggers & procedures.

5. Triggers (Business Rules Enforced at DB Layer)

trg_books_status
Keeps books.status aligned with available_copies.

trg_bor_before_ins
Before a borrow record is inserted:

Checks member is ACTIVE.

Checks book has available copies.

Checks borrow limit not exceeded.

Auto sets due_date.

trg_bor_after_ins
After issuing, decrement available_copies.

trg_bor_before_upd
Before updating borrow to RETURNED:

Auto-sets return_date (if not provided).

Computes fine based on due_date vs return_date.

trg_bor_after_upd
After returning, increment available_copies.

üëâ These triggers make sure librarians cannot ‚Äúcheat‚Äù by bypassing rules.

6. Views (for Easy Queries)

v_available_books
Shows only books with status = 'AVAILABLE'.

v_member_active_loans
Shows active (not returned) loans for each member.

v_overdue_loans
Shows all overdue loans (due_date < today, not yet returned).

üëâ These are used in CLI menus like ‚ÄúSearch Available Books‚Äù or ‚ÄúView Overdue Loans‚Äù.

7. Circulation Package

Encapsulates library operations for cleaner calls from CLI.

add_book ‚Üí Insert new book.

update_book_copies ‚Üí Adjust copies (ensures not less than current loans).

register_member ‚Üí Add new member, returns member_id.

suspend_member / activate_member ‚Üí Change status.

issue_book ‚Üí Borrow book. (Triggers enforce rules.)

return_book ‚Üí Return book + compute fine.

record_fine_payment ‚Üí Insert fine payment.

üëâ Librarian will mostly call these.

8. Reports Package

Encapsulates analytics & reporting.

borrow_outstanding(borrow_id) ‚Üí Fine ‚àí Payments.

member_outstanding(member_id) ‚Üí Total fines for a member.

top_borrowed_books(limit) ‚Üí Refcursor of top N books.

member_history(member_id) ‚Üí Full borrowing history of a member.

overdue_list() ‚Üí Refcursor of overdue loans.

üëâ Members & librarians will use these for reports.

9. Sample Data

Adds 2 members + 3 books:

‚ÄúThe Odyssey‚Äù (5 copies)

‚ÄúThe Iliad‚Äù (3 copies)

‚ÄúCrime and Punishment‚Äù (4 copies)